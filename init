#! /bin/sh
### BEGIN INIT INFO
# Provides:          lxc
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts/stops linux containers
# Description:       Provides linux container management: start, stop or
#                    restart containers.
### END INIT INFO

# Author: Nigel McNie <nigel@mcnie.name>
#set -x

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="linux containers"
NAME=lxc
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x /usr/bin/lxc-start ] || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

# Get all container names in order.
# (Seeing /var/lib/lxc/$C/priority)
get_containers() {
    for i in $(ls -1 /var/lib/lxc); do
        n="$(cat /var/lib/lxc/$i/priority 2>/dev/null)"
        (echo "$n" | grep '^[0-9]\+$' >/dev/null) || n=10
        echo "$n/$i"
    done | sort -n | sed 's:^[0-9]\+/::'
}

do_start()
{
    for C in $(get_containers); do
        if [ -r /var/lib/lxc/$C/autostart ]; then
            if [ "$(cat /var/lib/lxc/$C/autostart)" = "1" ]; then
                log_progress_msg "$C"
                if lxc-info -n $C | grep STOPPED > /dev/null 2>&1; then
                    if [ -x /usr/bin/screen ]; then
                        /usr/bin/screen -dmS init-${C} /usr/bin/lxc-start -n $C
                    else
                        lxc-start -n $C -d
                    fi
                    lxc-wait -n $C -s RUNNING
                    if [ $? -gt 0 ]; then
                        return 2
                    fi
                fi
            fi
        fi
    done
}

do_stop()
{
    halt=$(which lxc-halt)
    for C in $(get_containers | /usr/bin/tac); do
        if [ -f /var/lib/lxc/$C/state ]; then
            log_progress_msg "$C"
            if lxc-info -n $C | grep RUNNING > /dev/null 2>&1; then
                if [ -n "$halt" ]; then
                    $halt -n $C &
                else
                    /usr/bin/lxc-stop -n $C
                    if [ $? -gt 0 ]; then
                        return 2
                    fi
                fi
            fi
        fi
    done

    if [ -n "$halt" ]; then
        # Wait for all containers to be shutdown
        starttime=$(date "+%s")
        while true
        do
            if cat /var/lib/lxc/*/state | grep -vE "RUNNING|STOPPING" > /dev/null ; then
                return 0
            fi
            sleep .25

            curtime=$(date "+%s")

            if [ $(( $curtime - $starttime )) -gt 30 ]; then
                log_warning_msg "Containers have been stopping for longer than 30 seconds"
                # TODO force their shutdown. And maybe 30 seconds isn't long enough
                return 0
            fi
        done
    fi
}

# Check if cgroup is already mounted to avoid that lxc-wait hangs up at 'do_start'.
if ! grep -w 'cgroup' /etc/mtab > /dev/null; then
    echo 'error: you must first mount cgroup filesystem' >&2
    exit 1
fi

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" #"$NAME"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" #"$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" #"$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  status)
	for C in $(get_containers); do
		lxc-info -n $C
	done
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
